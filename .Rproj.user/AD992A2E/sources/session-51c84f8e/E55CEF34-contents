library(shiny)
library(bslib)
library(readxl)
library(dplyr)
library(jpeg)
library(grid)
library(gridExtra)

#Set working directory to correct folder
setwd("/Users/drew/Documents/Work/Summer24/textiles_app")

#Get Data
textiles_data <- read_excel("MaterialDataset01302024.xlsx")
names_cleaned <- textiles_data %>% 
  filter(textile_name != "NA")


#Define UI
ui <- fluidPage( 
  titlePanel(title = "Materials Sample Search"), 
  
  #All inputs will be here
  sidebarPanel(
    h3("The Material Record"), 
    selectInput("textile_name", "Search by textile name", 
                choices = c("All Names", names_cleaned$textile_name)), 
    textOutput("name_out")
  ), 
  
  mainPanel(
    tabsetPanel(tabPanel(title = "Images", 
                         plotOutput(outputId = "image_selection", 
                                    click = "plot_click")))
  )
  
)

#Define Server Logic
server <- function(input, output, session) { 
  
  
  #Check if name has been selected
  
  # if (input$textile_name != "All Names") { 
  #   names_cleaned <- names_cleaned %>% 
  #     filter(textile_name == input$textile_name)
  #   }
  
  
  #NEED TO FIX
  selected_name <- reactive({ 
    textiles_data %>% filter(textile_name == input$textile_name)
  })
    # if (input$textile_name != "All Names") { 
    #   textiles_data %>% filter(textile_name == input$textile_name)
    #   }
    # else { 
    #   names_cleaned
    #   }
    # })
    # 
  # Selected_name is not being updated correctly
  # req(selected_name)
  # print(selected_name)

  output$name_out <- renderText({
    selected_name()$textile_name %>% 
      unique()
  })
      

  output$image_selection <- renderPlot({
    
    #Get file path of image we want to render
    #Code from Nicholas Sliter's Repo/Stack overflow: #https://stackoverflow
    #.com/questions/53386688/how-to-display-multiple-pictures-png-that-are-stored-locally-on-shiny 
    
    photo_name <- selected_name()$image_filename_app
    filename <- paste0("app_images/", photo_name, sep = "")
    
    #Check that the photo(s) exists in folder then convert to grobs
    filename <- filename[file.exists(filename)]
    jpegs = lapply(filename, readJPEG)
    
    #rasterGrob displays images as array of pixel values over plot
    asGrobs = lapply(jpegs, rasterGrob)
    
    
    p <- grid.arrange(grobs = asGrobs, 
                      nrow = 20, 
                      ncol = 4, 
                      padding = unit(50, "line"))
    
  },
  width = 900, 
  height = 5000, 
  res = 40)
}
  

#Run the app
shinyApp(ui = ui, server = server)
